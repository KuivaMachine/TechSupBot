package org.example.techsupbot;

import lombok.AccessLevel;
import lombok.Data;
import lombok.experimental.FieldDefaults;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.context.annotation.Configuration;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.TelegramBotsApi;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import org.telegram.telegrambots.updatesreceivers.DefaultBotSession;

import java.util.ArrayList;
import java.util.List;


@Component
public class TechSupBot extends TelegramLongPollingBot {

    TelegramBotConfig config;

    public TechSupBot(TelegramBotConfig config) {
        super(config.getToken());
        try {
            TelegramBotsApi api = new TelegramBotsApi(DefaultBotSession.class);
            api.registerBot(this);
        } catch (TelegramApiException e) {
            throw new RuntimeException(e);
        }

    }

    @Override
    public String getBotUsername() {
        return "MustHaveCase_bot.";
    }


    @Override
    public void onUpdateReceived(Update update) {
        if (update.hasMessage() && update.getMessage().hasText()) {
            handleMessage(update.getMessage().getChatId(), update.getMessage().getText());
        } else if (update.hasCallbackQuery()) {
            handleCallbackQuery(update.getCallbackQuery().getMessage().getChatId(), update.getCallbackQuery().getData());
        }
    }

    private void handleMessage(Long chatId, String text) {
        if ("/start".equals(text)) {
            sendWelcomeMessage(chatId);
        } else {
            sendMessage(chatId, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è.");
        }
    }

    private void handleCallbackQuery(Long chatId, String data) {
        switch (data) {
            case "service_support":
                sendServiceSupportMessage(chatId);
                break;
            case "wrong_item":
                sendWrongItemInstructions(chatId);
                break;
            case "damaged_item":
                sendDamagedItemInstructions(chatId);
                break;
            case "order_questions":
                sendOrderQuestionsMessage(chatId);
                break;
            case "create_case":
                sendCreateCaseMessage(chatId);
                break;
            case "join_group":
                sendJoinGroupMessage(chatId);
                break;
            case "promotions":
                sendPromotionsMessage(chatId);
                break;
            case "help_choice":
                sendHelpChoiceMessage(chatId);
                break;
            default:
                sendMessage(chatId, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.");
        }
    }

    private void sendMessage(Long chatId, String s) {
        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText(s);
        executeMessage(message);
    }

    private void sendWelcomeMessage(Long chatId) {
        SendMessage message = new SendMessage();
        message.setChatId(chatId.toString());
        message.setText("üëã –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ MustHaveCase!\n" +
                "–ú—ã —Ä–∞–¥—ã, —á—Ç–æ –≤—ã —Å –Ω–∞–º–∏! –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ —Å—Ç–∏–ª—å–Ω—ã–µ, –Ω–∞–¥–µ–∂–Ω—ã–µ –∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —á–µ—Ö–ª—ã –¥–ª—è –≤–∞—à–µ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ê –µ—â–µ –º—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å —Å –≤—ã–±–æ—Ä–æ–º –∏–ª–∏ —Ä–µ—à–∏—Ç—å –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å.\n" +
                "–ß—Ç–æ —è –º–æ–≥—É –¥–ª—è –≤–∞—Å —Å–¥–µ–ª–∞—Ç—å?");
        message.setReplyMarkup(createInlineKeyboard(
                List.of(
                        new Pair<>("üõ†Ô∏è –°–µ—Ä–≤–∏—Å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞", "service_support"),
                        new Pair<>("üé® –°–æ–∑–¥–∞—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π —á–µ—Ö–æ–ª", "create_case"),
                        new Pair<>("üí¨ –í—Å—Ç—É–ø–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É", "join_group"),
                        new Pair<>("üõí –ê–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏", "promotions"),
                        new Pair<>("‚ùì –ü–æ–º–æ—â—å –≤ –≤—ã–±–æ—Ä–µ", "help_choice")
                )
        ));
        executeMessage(message);
    }

    private void sendServiceSupportMessage(Long chatId) {
        SendMessage message = new SendMessage();
        message.setChatId(chatId.toString());
        message.setText("–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –∫ –Ω–∞–º! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É, –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –ø–æ–º–æ—á—å –≤–∞–º –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ!");
        message.setReplyMarkup(createInlineKeyboard(
                List.of(
                        new Pair<>("–Ø –ø–æ–ª—É—á–∏–ª –Ω–µ —Ç–æ—Ç —Ç–æ–≤–∞—Ä –∏–ª–∏ –¥–∏–∑–∞–π–Ω", "wrong_item"),
                        new Pair<>("–¢–æ–≤–∞—Ä –ø–æ–≤—Ä–µ–∂–¥–µ–Ω –∏–ª–∏ –±—Ä–∞–∫–æ–≤–∞–Ω", "damaged_item"),
                        new Pair<>("–ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ –∑–∞–∫–∞–∑—É", "order_questions")
                )
        ));
        executeMessage(message);
    }

    private void sendWrongItemInstructions(Long chatId) {
        SendMessage message = new SendMessage();
        message.setChatId(chatId.toString());
        message.setText("–ú—ã –æ—á–µ–Ω—å —Å–æ–∂–∞–ª–µ–µ–º, —á—Ç–æ –í—ã –ø–æ–ª—É—á–∏–ª–∏ –Ω–µ —Ç–æ—Ç —Ç–æ–≤–∞—Ä –∏–ª–∏ –¥–∏–∑–∞–π–Ω. –î–∞–≤–∞–π—Ç–µ —Ä–µ—à–∏–º —ç—Ç—É –ø—Ä–æ–±–ª–µ–º—É –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ!\n\n" +
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:\n" +
                "1. üì∏ –°—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É–π—Ç–µ —Ç–æ–≤–∞—Ä –∏ –ø—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ –Ω–∞–º (—ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç –±—ã—Å—Ç—Ä–µ–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —Å–∏—Ç—É–∞—Ü–∏–∏).\n" +
                "2. üìù –ü—Ä–∏—à–ª–∏—Ç–µ —Å–∫—Ä–∏–Ω –∏–∑ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞, —á—Ç–æ –± –±—ã–ª–æ –≤–∏–¥–Ω–æ –∑–∞–∫–∞–∑.\n" +
                "3. üì¶ –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —É–ø–∞–∫–æ–≤–∫—É –∏ —Ç–æ–≤–∞—Ä –≤ —Ç–æ–º –≤–∏–¥–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã –µ–≥–æ –ø–æ–ª—É—á–∏–ª–∏.\n\n" +
                "–ö–∞–∫ —Ç–æ–ª—å–∫–æ –º—ã –ø–æ–ª—É—á–∏–º —ç—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –º—ã –Ω–∞—á–Ω–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–º–µ–Ω—ã –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞.");
        executeMessage(message);
    }

    private void sendDamagedItemInstructions(Long chatId) {
        SendMessage message = new SendMessage();
        message.setChatId(chatId.toString());
        message.setText("–ú—ã –æ—á–µ–Ω—å —Å–æ–∂–∞–ª–µ–µ–º, —á—Ç–æ –í—ã –ø–æ–ª—É—á–∏–ª–∏ –±—Ä–∞–∫–æ–≤–∞–Ω–Ω—ã–π –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä. –î–∞–≤–∞–π—Ç–µ —Ä–µ—à–∏–º —ç—Ç—É –ø—Ä–æ–±–ª–µ–º—É –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ!\n\n" +
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:\n" +
                "1. üì∏ –°—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É–π—Ç–µ —Ç–æ–≤–∞—Ä –∏ –ø—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ –Ω–∞–º (—ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç –±—ã—Å—Ç—Ä–µ–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —Å–∏—Ç—É–∞—Ü–∏–∏).\n" +
                "2. üìù –ü—Ä–∏—à–ª–∏—Ç–µ —Å–∫—Ä–∏–Ω –∏–∑ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞, —á—Ç–æ –± –±—ã–ª–æ –≤–∏–¥–Ω–æ –∑–∞–∫–∞–∑.\n" +
                "3. üì¶ –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —É–ø–∞–∫–æ–≤–∫—É –∏ —Ç–æ–≤–∞—Ä –≤ —Ç–æ–º –≤–∏–¥–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã –µ–≥–æ –ø–æ–ª—É—á–∏–ª–∏.\n\n" +
                "–ö–∞–∫ —Ç–æ–ª—å–∫–æ –º—ã –ø–æ–ª—É—á–∏–º —ç—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –º—ã –Ω–∞—á–Ω–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–º–µ–Ω—ã –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞.");
        executeMessage(message);
    }

    private void sendOrderQuestionsMessage(Long chatId) {
        SendMessage message = new SendMessage();
        message.setChatId(chatId.toString());
        message.setText("–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –∫ –Ω–∞–º! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å:");
        executeMessage(message);
    }

    private void sendCreateCaseMessage(Long chatId) {
        SendMessage message = new SendMessage();
        message.setChatId(chatId.toString());
        message.setText("–ú—ã —Ä–∞–¥—ã, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å —á—Ç–æ-—Ç–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ! –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –∏ –≤—ã –ø–µ—Ä–µ–π–¥–µ—Ç–µ –Ω–∞ –Ω–∞—à —Å–∞–π—Ç, –≥–¥–µ —Å–º–æ–∂–µ—Ç–µ:\n" +
                "- –í—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å —Ç–µ–ª–µ—Ñ–æ–Ω–∞.\n" +
                "- –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–≤–æ–π –¥–∏–∑–∞–π–Ω –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –∏–∑ –≥–æ—Ç–æ–≤—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.\n" +
                "- –î–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ –ª–æ–≥–æ—Ç–∏–ø—ã.\n" +
                "- –£–≤–∏–¥–µ—Ç—å –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.\n\n" +
                "–≠—Ç–æ –ø—Ä–æ—Å—Ç–æ, –±—ã—Å—Ç—Ä–æ –∏ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ!\n\n" +
                "üëá –ù–∞–∂–º–∏—Ç–µ –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:\n" +
                "[–°–æ–∑–¥–∞—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π —á–µ—Ö–æ–ª](https://–≤–∞—à—Å–∞–π—Ç.com/–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä)");
        message.setParseMode("Markdown");
        executeMessage(message);
    }

    private void sendJoinGroupMessage(Long chatId) {
        SendMessage message = new SendMessage();
        message.setChatId(chatId.toString());
        message.setText("–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–π –≥—Ä—É–ø–ø–µ, —á—Ç–æ–±—ã –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –∞–∫—Ü–∏–π, –Ω–æ–≤–∏–Ω–æ–∫ –∏ –æ–±—â–∞—Ç—å—Å—è —Å –¥—Ä—É–≥–∏–º–∏ –∫–ª–∏–µ–Ω—Ç–∞–º–∏:\n" +
                "[–ù–∞—à–∞ –≥—Ä—É–ø–ø–∞](https://t.me/yourgroup)");
        message.setParseMode("Markdown");
        executeMessage(message);
    }

    private void sendPromotionsMessage(Long chatId) {
        SendMessage message = new SendMessage();
        message.setChatId(chatId.toString());
        message.setText("–¢–µ–∫—É—â–∏–µ –∞–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏:\n" +
                "- –°–∫–∏–¥–∫–∞ 10% –Ω–∞ –≤—Å–µ —á–µ—Ö–ª—ã –¥–æ –∫–æ–Ω—Ü–∞ –º–µ—Å—è—Ü–∞!\n" +
                "- –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –æ—Ç 2000 —Ä—É–±–ª–µ–π.\n" +
                "- –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤.");
        executeMessage(message);
    }

    private void sendHelpChoiceMessage(Long chatId) {
        SendMessage message = new SendMessage();
        message.setChatId(chatId.toString());
        message.setText("–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –≤—ã–±–æ—Ä–µ —á–µ—Ö–ª–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤—ã –∏—â–µ—Ç–µ, –∏ –º—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º –ø–æ–¥–æ–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç!");
        executeMessage(message);
    }

    private InlineKeyboardMarkup createInlineKeyboard(List<Pair<String, String>> buttons) {
        InlineKeyboardMarkup keyboardMarkup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();
        List<InlineKeyboardButton> row = new ArrayList<>();
        for (Pair<String, String> button : buttons) {
            InlineKeyboardButton inlineKeyboardButton = new InlineKeyboardButton();
            inlineKeyboardButton.setText(button.getFirst());
            inlineKeyboardButton.setCallbackData(button.getSecond());
            row.add(inlineKeyboardButton);
        }
        keyboard.add(row);
        keyboardMarkup.setKeyboard(keyboard);
        return keyboardMarkup;
    }

    private void executeMessage(SendMessage message) {
        try {
            execute(message);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }


}

class Pair<K, V> {
    private K first;
    private V second;

    public Pair(K first, V second) {
        this.first = first;
        this.second = second;
    }

    public K getFirst() {
        return first;
    }

    public V getSecond() {
        return second;
    }
}
