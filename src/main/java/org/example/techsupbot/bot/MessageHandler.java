package org.example.techsupbot.bot;

import lombok.AccessLevel;
import lombok.RequiredArgsConstructor;
import lombok.experimental.FieldDefaults;
import lombok.extern.log4j.Log4j2;
import org.example.techsupbot.DTO.Client;
import org.example.techsupbot.DTO.ClientService;
import org.example.techsupbot.data.ButtonLabels;
import org.example.techsupbot.data.ClientStatus;
import org.example.techsupbot.googlesheets.GoogleSheetsService;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Controller;
import org.telegram.telegrambots.meta.api.methods.groupadministration.GetChatMember;
import org.telegram.telegrambots.meta.api.methods.send.SendMediaGroup;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.methods.send.SendPhoto;
import org.telegram.telegrambots.meta.api.objects.InputFile;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.chatmember.ChatMember;
import org.telegram.telegrambots.meta.api.objects.media.InputMedia;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardRemove;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardButton;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardRow;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;

@Log4j2
@Controller
@RequiredArgsConstructor
@FieldDefaults(level = AccessLevel.PRIVATE)
public class MessageHandler {

    @Value("${bot.manager_id}")
    private Long managerChatId;
    @Value("${bot.alexander_id}")
    private Long alexanderChatId;
    @Value("${bot.promo}")
    private String promo;
    final ClientService clientService;
    final GoogleSheetsService googleSheetsService;
    TelegramRestController telegram;


    public void initController(TelegramRestController telegramRestController) {
        this.telegram = telegramRestController;
    }

    public SendMessage processMessage(Long chatId, Message update) {
        String text = update.getText();
        Client currentclient = clientService.findByChatId(chatId);
        currentclient.setUsername(update.getFrom().getUserName());
        SendMessage message = new SendMessage();
        message.setChatId(chatId);

        switch (text) {
            case "/delete_me" -> {
                clientService.deleteClientByChatId(chatId);
                message.setText("–ö–ª–∏–µ–Ω—Ç —É–¥–∞–ª–µ–Ω");
                message.setReplyMarkup(new ReplyKeyboardRemove(true));
                return message;
            }
            case "/update_table" -> {
                googleSheetsService.updateTable(clientService.getAllClients());
                message.setText("–¢–∞–±–ª–∏—Ü–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞");
                return message;
            }
            case "/service_support" -> {
                return sendServiceSupportMessage(currentclient, message);
            }
            case "/create_case" -> {
                return sendCreateCaseMessage(currentclient, message);
            }
            case "/join_group" -> {
                return sendJoinGroupMessage(currentclient, message);
            }
            case "/cooperation" -> {
                return sendHelpCooperationMessage(currentclient, message);
            }
            case "/promotions" -> {
                return sendPromotionsMessage(currentclient, message);
            }
        }
        //–ï–°–õ–ò –ù–ê–ñ–ê–õ–ò –ö–ù–û–ü–ö–£ –û–¢–ú–ï–ù–ò–¢–¨
        if (text.equals(ButtonLabels.CANCEL.getLabel())) {
            return cancelProcess(currentclient, message);
        }

        //TODO –ï–°–õ–ò –û–ñ–ò–î–ê–ï–¢–°–Ø –ö–û–ù–¢–ï–ù–¢ –ù–û –ü–†–ò–®–õ–û –°–û–û–ë–©–ï–ù–ò–ï
        if (currentclient.getStatus().equals(ClientStatus.WAITING_CONTENT)) {
            message.setText("""
                    –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, <b>–æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–º –û–î–ù–ò–ú —Å–æ–æ–±—â–µ–Ω–∏–µ–º</b>:
                    1. üì∏ –§–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞. –ù–∞ –Ω–µ–º –¥–æ–ª–∂–Ω–∞ —Ö–æ—Ä–æ—à–æ –±—ã—Ç—å –≤–∏–¥–Ω–∞ —Å—É—Ç—å –ø—Ä–æ–±–ª–µ–º—ã.
                    2. üìù –°–∫—Ä–∏–Ω –∑–∞–∫–∞–∑–∞ –∏–∑ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞.
                    3. ‚úèÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã.
                    –ö–∞–∫ —Ç–æ–ª—å–∫–æ –º—ã –ø–æ–ª—É—á–∏–º —ç—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –º—ã –Ω–∞—á–Ω–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–º–µ–Ω—ã –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞. –î–ª—è –æ—Ç–º–µ–Ω—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ "–û—Ç–º–µ–Ω–∞"
                    """);
            message.setParseMode("HTML");
            message.setReplyMarkup(createReplyKeyboard(List.of(new KeyboardRow(List.of(
                    new KeyboardButton(ButtonLabels.CANCEL.getLabel()))))));
            return message;
        }
        //–ï–°–õ–ò –û–ñ–ò–î–ê–ï–¢–°–Ø –ü–õ–û–•–û–ô –û–¢–ó–´–í –ù–ê –°–ï–†–í–ò–° (–ù–ê–ñ–ê–õ–ò 1-3 –ó–í–ï–ó–î–´)
        if (currentclient.getStatus().equals(ClientStatus.WAITING_BAD_FEEDBACK)) {
            message.setText("–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à –æ—Ç–∑—ã–≤!");
            message.setReplyMarkup(createInlineKeyboard(List.of(new Pair<>("–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é \uD83D\uDD19","main_menu"))));
            currentclient.setStatus(ClientStatus.SAVED);
            currentclient.setServiceFeedback(text);
            clientService.saveClient(currentclient);
            googleSheetsService.updateTable(clientService.getAllClients());
            return message;
        }
        //–ï–°–õ–ò –û–ñ–ò–î–ê–ï–¢–°–Ø –ü–õ–û–•–û–ô –û–¢–ó–´–í –ù–ê –ö–û–ù–°–¢–†–£–ö–¢–û–† (–ù–ê–ñ–ê–õ–ò 1-3 –ó–í–ï–ó–î–´)
        if (currentclient.getStatus().equals(ClientStatus.WAITING_BAD_FEEDBACK_CONSTRUCTOR)) {
            message.setText("–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à –æ—Ç–∑—ã–≤!");
            message.setReplyMarkup(createInlineKeyboard(List.of(new Pair<>("–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é \uD83D\uDD19","main_menu"))));
            currentclient.setStatus(ClientStatus.SAVED);
            currentclient.setConstructorFeedback(text);
            clientService.saveClient(currentclient);
            googleSheetsService.updateTable(clientService.getAllClients());
            return message;
        }
        //–ï–°–õ–ò –°–¢–ê–¢–£–° "–í–û–ü–†–û–° –ü–û –ó–ê–ö–ê–ó–£"
        if (currentclient.getStatus().equals(ClientStatus.ORDER_QUESTION)) {
            //–ï–°–õ–ò –ù–ê–ñ–ê–õ–ò –ö–ù–û–ü–ö–£ –Ø –ü–ï–†–ï–î–£–ú–ê–õ –ü–ò–°–ê–¢–¨
            telegram.deleteLastMessage(chatId);
            if(text.equals(ButtonLabels.CANCEL_ORDER_QUESTION.getLabel())){

                message.setText("–•–æ—Ä–æ—à–æ, —è –≤—Å–µ –æ—Ç–º–µ–Ω–∏–ª \uD83D\uDC4D");
                message.setReplyMarkup(createInlineKeyboard(List.of(new Pair<>("–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é \uD83D\uDD19","main_menu"))));
                return message;
            }else{
                return sendOrderQuestionProcess(update, message, currentclient);
            }
        }
        //–°–û–û–ë–©–ï–ù–ò–ï –ü–û –£–ú–û–õ–ß–ê–ù–ò–Æ, –ï–°–õ–ò –ù–ï –û–î–ò–ù –ò–ó –°–õ–£–ß–ê–ï–í –ù–ï –°–†–ê–ë–û–¢–ê–õ
        return setDefaultMessage(message);
    }



    public SendMessage processCallback(Update update, String callback) {
        SendMessage message = new SendMessage();
        long chatId = update.getCallbackQuery().getMessage().getChatId();
        message.setChatId(chatId);
        Client currentclient = clientService.findByChatId(chatId);
        currentclient.setUsername(update.getCallbackQuery().getFrom().getUserName());
        return switch (callback) {
            case "service_support" -> sendServiceSupportMessage(currentclient, message);
            case "wrong_item" -> sendWrongItemInstructions(currentclient, message);
            case "damaged_item" -> sendDamagedItemInstructions(currentclient, message);
            case "promocode" -> sendPromocode(message, update.getCallbackQuery().getFrom().getId());
            case "order_questions" -> sendOrderQuestionsMessage(currentclient, message);
            case "create_case" -> sendCreateCaseMessage(currentclient, message);
            case "join_group" -> sendJoinGroupMessage(currentclient, message);
            case "promotions" -> sendPromotionsMessage(currentclient, message);
            case "cooperation" -> sendHelpCooperationMessage(currentclient, message);
            case "call_to_manager" -> callToManager(update.getCallbackQuery().getFrom().getUserName(), message);
            case "5_stars", "4_stars" -> sendGoodAnswer(currentclient, message,callback);
            case "3_stars", "2_stars", "1_stars" -> sendBadAnswer(currentclient, message,callback);
            case "5_stars_constructor", "4_stars_constructor" -> sendGoodAnswerToConstructor(currentclient, message,callback);
            case "3_stars_constructor", "2_stars_constructor", "1_stars_constructor" -> sendBadAnswerToConstructor(currentclient, message,callback);
            default -> {
                message.setText(callback);
                yield message;
            }
        };
    }


    public SendMessage processMediaGroup(Long chatId, String caption, List<InputMedia> mediaList) {
        Client currentclient = clientService.findByChatId(chatId);
        SendMessage message = new SendMessage();
        message.setChatId(chatId);


       if(currentclient.getStatus().equals(ClientStatus.WAITING_CONTENT)||currentclient.getStatus().equals(ClientStatus.ORDER_QUESTION)){
            currentclient.setUsedService(true);
            currentclient.setDescription(caption);
            SendMediaGroup media = new SendMediaGroup();

            mediaList.getFirst().setCaption(String.format("–ó–∞—è–≤–∫–∞ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ @%s!\n–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã:\n%s", currentclient.getUsername(), currentclient.getDescription() == null ? "–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è" : currentclient.getDescription()));
            media.setMedias(mediaList);
            //–û–¢–ü–†–ê–í–ö–ê –ú–ï–ù–ï–î–ñ–ï–†–£
            media.setChatId(managerChatId);
            telegram.executeMessage(media);
            //–û–¢–ü–†–ê–í–ö–ê –ê–õ–ï–ö–°–ê–ù–î–†–£
            media.setChatId(alexanderChatId);
            telegram.executeMessage(media);
            currentclient.setStatus(ClientStatus.SAVED);
            clientService.saveClient(currentclient);
            message.setText("–ú—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –≤–∞—à –∑–∞–ø—Ä–æ—Å –º–µ–Ω–µ–¥–∂–µ—Ä—É. –í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π.");
            message.setReplyMarkup(createReplyKeyboard(List.of(new KeyboardRow(List.of(new KeyboardButton(ButtonLabels.MAIN_MENU.getLabel()))))));
            startTimerByServiceSupport(currentclient);
        } else {
            message.setText("–ß—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É, –Ω–∞–∂–º–∏—Ç–µ \"–°–µ—Ä–≤–∏—Å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞\" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é");
            currentclient.setStatus(ClientStatus.SAVED);
            clientService.saveClient(currentclient);
            message.setReplyMarkup(createReplyKeyboard(List.of(new KeyboardRow(List.of(new KeyboardButton(ButtonLabels.MAIN_MENU.getLabel()))))));

        }
            return message;
    }

    public SendMessage processPhoto(Long chatId, Message photo) {
        Client currentclient = clientService.findByChatId(chatId);
        SendMessage message = new SendMessage();
        message.setChatId(chatId);


        if (currentclient.getStatus().equals(ClientStatus.ORDER_QUESTION)) {
            currentclient.setDescription(photo.getCaption());
            SendPhoto media = new SendPhoto();
            media.setCaption(String.format("–ó–∞—è–≤–∫–∞ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ @%s!\n–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã:\n%s", currentclient.getUsername(), currentclient.getDescription() == null ? "–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è" : currentclient.getDescription()));
            media.setPhoto( new InputFile().setMedia(photo.getPhoto().getLast().getFileId()));

            //–û–¢–ü–†–ê–í–ö–ê –ú–ï–ù–ï–î–ñ–ï–†–£
            media.setChatId(managerChatId);
            telegram.executeMessage(media);
            //–û–¢–ü–†–ê–í–ö–ê –ê–õ–ï–ö–°–ê–ù–î–†–£
            media.setChatId(alexanderChatId);
            telegram.executeMessage(media);

            currentclient.setUsedService(true);
            currentclient.setStatus(ClientStatus.SAVED);
            clientService.saveClient(currentclient);
            message.setText("–ú—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –≤–∞—à –∑–∞–ø—Ä–æ—Å –º–µ–Ω–µ–¥–∂–µ—Ä—É. –í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π.");
            message.setReplyMarkup(createReplyKeyboard(List.of(new KeyboardRow(List.of(new KeyboardButton(ButtonLabels.MAIN_MENU.getLabel()))))));
            startTimerByServiceSupport(currentclient);

           } else if (currentclient.getStatus().equals(ClientStatus.WAITING_CONTENT)) {
            message.setText(String.format("–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Ñ–æ—Ç–æ %s. \n\n–ù–æ –¥–ª—è –ø–æ–ª–Ω–æ–π –∑–∞—è–≤–∫–∏ –Ω—É–∂–Ω—ã –≤—Å–µ —Å–ª–µ–¥—É—é—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã:\n 1. üì∏ –§–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞. –ù–∞ –Ω–µ–º –¥–æ–ª–∂–Ω–∞ —Ö–æ—Ä–æ—à–æ –±—ã—Ç—å –≤–∏–¥–Ω–∞ —Å—É—Ç—å –ø—Ä–æ–±–ª–µ–º—ã.\n2. üìù –°–∫—Ä–∏–Ω –∑–∞–∫–∞–∑–∞ –∏–∑ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞.\n 3. ‚úèÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, <b>–æ—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ –û–î–ù–ò–ú —Å–æ–æ–±—â–µ–Ω–∏–µ–º</b>üëá", photo.getCaption() == null ? "–±–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è" : "—Å –æ–ø–∏—Å–∞–Ω–∏–µ–º"));
            message.setParseMode("HTML");
        }
        return message;
    }

    public SendMessage processFile(Long chatId) {
        Client currentclient = clientService.findByChatId(chatId);
        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        if (currentclient.getStatus().equals(ClientStatus.ORDER_QUESTION)||currentclient.getStatus().equals(ClientStatus.WAITING_CONTENT)) {
            message.setText("–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <b>–æ–±—ã—á–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏</b>, –Ω–µ —Ñ–∞–π–ª—ã)");
        }else {
            message.setText("–ß—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É, –Ω–∞–∂–º–∏—Ç–µ \"–°–µ—Ä–≤–∏—Å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞\" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é");
            message.setReplyMarkup(createReplyKeyboard(List.of(new KeyboardRow(List.of(new KeyboardButton(ButtonLabels.MAIN_MENU.getLabel()))))));
        }
        message.setParseMode("HTML");
        return message;
    }


    private SendMessage setDefaultMessage(SendMessage message) {
        message.setText("""
                –ö–æ–Ω–µ—á–Ω–æ, —è –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å! üòä
                –ï—Å–ª–∏ —É —Ç–µ–±—è –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã, –≤–æ—Ç —á—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
                
                1Ô∏è‚É£ –°–≤—è–∑—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
                   - –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞, —è –º–æ–≥—É –ø–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–∞—à–µ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞.
                
                2Ô∏è‚É£ –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã (FAQ)
                   - –í–æ–∑–º–æ–∂–Ω–æ, –æ—Ç–≤–µ—Ç —É–∂–µ –µ—Å—Ç—å –≤ [–Ω–∞—à–µ–º —Ä–∞–∑–¥–µ–ª–µ FAQ](https://musthavecase.ru/faq)
                
                3Ô∏è‚É£ –ù–∞–ø–∏—Å–∞—Ç—å –Ω–∞–ø—Ä—è–º—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä—É
                   - –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –≤–∞–∂–Ω—ã–π, –ø–∏—à–∏ –Ω–∞ –ø–æ—á—Ç—É: **support@musthavecase.ru**
                   (–ü–∏—Å—å–º–∞ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –ª–∏—á–Ω–æ –Ω–∞—à –¥–∏—Ä–µ–∫—Ç–æ—Ä.)
                
                üëâ –ú—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –ø–æ–º–æ—á—å! –ù–µ —Å—Ç–µ—Å–Ω—è–π—Å—è –æ–±—Ä–∞—â–∞—Ç—å—Å—è.
                """);
        message.setReplyMarkup(createInlineKeyboard(List.of(new Pair<>("–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é \uD83D\uDD19", "call_to_manager"), new Pair<>("–í—ã–∑–≤–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞", "main_menu"))));
        message.enableMarkdown(true);
        return message;
    }


    private SendMessage callToManager(String user, SendMessage message) {
        SendMessage order = new SendMessage();
        String question = String.format("–ö–ª–∏–µ–Ω—Ç @%s –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É \"–ü–æ–¥–∫–ª—é—á–∏—Ç—å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞\"", user);
        //–û–¢–ü–†–ê–í–ò–¢–¨ –ú–ï–ù–ï–î–ñ–ï–†–£
        order.setChatId(managerChatId);
        order.setText(question);
        telegram.executeMessage(order);
        //–û–¢–ü–†–ê–í–ò–¢–¨ –ê–õ–ï–ö–°–ê–ù–î–†–£
        order.setChatId(alexanderChatId);
        telegram.executeMessage(order);
        message.setText("–°–ø–∞—Å–∏–±–æ! –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π.");
        message.setReplyMarkup(createReplyKeyboard(List.of(new KeyboardRow(List.of(new KeyboardButton(ButtonLabels.MAIN_MENU.getLabel()))))));
        return message;

    }

    private SendMessage cancelProcess(Client currentclient, SendMessage message) {
        message.setText("–ó–∞—è–≤–∫–∞ –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç –æ—Ç–º–µ–Ω–µ–Ω–∞.");
        message.setReplyMarkup(createReplyKeyboard(List.of(new KeyboardRow(List.of(new KeyboardButton(ButtonLabels.MAIN_MENU.getLabel()))))));

        currentclient.setStatus(ClientStatus.SAVED);
        clientService.saveClient(currentclient);
        return message;
    }
    public void startTimerByServiceSupport(Client currentClient) {
        log.info("–ó–ê–ü–£–°–ö–ê–Æ –¢–ê–ô–ú–ï–† –î–õ–Ø –°–ï–†–í–ò–°–ê");
        ScheduledExecutorService scheduler = Executors.newScheduledThreadPool(1);
        scheduler.schedule(() -> {
            sendServiceQualityMessage(currentClient);
        }, 24, TimeUnit.HOURS);
        scheduler.shutdown();

    }

    public void startTimerByCaseConstructor(Client currentClient) {
        log.error("–ó–ê–ü–£–°–ö–ê–Æ –¢–ê–ô–ú–ï–† –î–õ–Ø –ö–û–ù–°–¢–†–£–ö–¢–û–†–ê");
        ScheduledExecutorService scheduler = Executors.newScheduledThreadPool(1);
        scheduler.schedule(() -> {
            sendConstructorQualityMessage(currentClient);
        }, 24, TimeUnit.HOURS);
        scheduler.shutdown();

    }

    private void sendConstructorQualityMessage(Client currentClient) {
        SendMessage message = new SendMessage();
        currentClient.setStatus(ClientStatus.WAITING_CONSTRUCTOR_QUALITY);
        clientService.saveClient(currentClient);
        message.setChatId(currentClient.getChatId());
        message.setText("""
                üé® –ü–æ–Ω—Ä–∞–≤–∏–ª—Å—è –ª–∏ –≤–∞–º –Ω–∞—à –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä?
               
                –ú—ã —Å—Ç–∞—Ä–∞–µ–º—Å—è —Å–¥–µ–ª–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è —á–µ—Ö–ª–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —É–¥–æ–±–Ω—ã–º –∏ –ø—Ä–∏—è—Ç–Ω—ã–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ü–µ–Ω–∏—Ç–µ –≤–∞—à –æ–ø—ã—Ç –ø–æ —à–∫–∞–ª–µ –æ—Ç 1 –¥–æ 5, –≥–¥–µ:
                1 ‚Äî —Å–æ–≤—Å–µ–º –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å
                5 ‚Äî –≤—Å–µ –æ—Ç–ª–∏—á–Ω–æ!
                
                –ö–∞–∫ –≤–∞–º –Ω–∞—à –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä?
                - –£–¥–æ–±–Ω–æ –ª–∏ –±—ã–ª–æ –≤—ã–±–∏—Ä–∞—Ç—å –º–æ–¥–µ–ª—å —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –Ω–∞—à–ª–∏ –ª–∏ —Å–≤–æ—é –º–æ–¥–µ–ª—å?
                - –õ–µ–≥–∫–æ –ª–∏ –±—ã–ª–æ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º?
               
                –ü—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏—Ç–µ –æ—Ü–µ–Ω–∫—É –Ω–∏–∂–µ:
                """);
        message.setReplyMarkup(createInlineKeyboard(List.of(
                new Pair<>("‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è", "5_stars_constructor"),
                new Pair<>("‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è", "4_stars_constructor"),
                new Pair<>("‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è", "3_stars_constructor"),
                new Pair<>("‚≠êÔ∏è‚≠êÔ∏è", "2_stars_constructor"),
                new Pair<>("‚≠êÔ∏è", "1_stars_constructor")
        )));
        telegram.executeMessage(message);
    }

    private void sendServiceQualityMessage(Client currentClient) {
        SendMessage message = new SendMessage();
        currentClient.setStatus(ClientStatus.WAITING_SERVICE_QUALITY);
        clientService.saveClient(currentClient);
        message.setChatId(currentClient.getChatId());
        message.setText("""
                üòä –ú—ã —Ü–µ–Ω–∏–º –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ!
                –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–º–æ–≥–∏—Ç–µ –Ω–∞–º —Å—Ç–∞—Ç—å –ª—É—á—à–µ ‚Äî –æ—Ü–µ–Ω–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –ø–æ —à–∫–∞–ª–µ –æ—Ç 1 –¥–æ 5, –≥–¥–µ:
                1 ‚Äî —Å–æ–≤—Å–µ–º –Ω–µ–¥–æ–≤–æ–ª–µ–Ω
                5 ‚Äî –≤—Å–µ –æ—Ç–ª–∏—á–Ω–æ!
                
                –ö–∞–∫ –≤–∞–º –Ω–∞—à–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞?
                - –ë—ã—Å—Ç—Ä–æ –ª–∏ –º—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –≤–∞—à –∑–∞–ø—Ä–æ—Å?
                - –£–¥–∞–ª–æ—Å—å –ª–∏ —Ä–µ—à–∏—Ç—å –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É?
                - –ë—ã–ª–∏ –ª–∏ –Ω–∞—à–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –≤–µ–∂–ª–∏–≤—ã –∏ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã?
                
                –ü—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏—Ç–µ –æ—Ü–µ–Ω–∫—É –Ω–∏–∂–µ:
                """);
        message.setReplyMarkup(createInlineKeyboard(List.of(
                new Pair<>("‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è", "5_stars"),
                new Pair<>("‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è", "4_stars"),
                new Pair<>("‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è", "3_stars"),
                new Pair<>("‚≠êÔ∏è‚≠êÔ∏è", "2_stars"),
                new Pair<>("‚≠êÔ∏è", "1_stars")
        )));
        telegram.executeMessage(message);
    }

    private SendMessage sendBadAnswer(Client currentclient, SendMessage message,String callback) {
        if (currentclient.getStatus().equals(ClientStatus.WAITING_SERVICE_QUALITY)) {
            message.setText("""
                    üôè –°–ø–∞—Å–∏–±–æ –∑–∞ —á–µ—Å—Ç–Ω—ã–π –æ—Ç–∑—ã–≤!
                    –ù–∞–º –æ—á–µ–Ω—å –∂–∞–ª—å, —á—Ç–æ –º—ã –Ω–µ –æ–ø—Ä–∞–≤–¥–∞–ª–∏ –≤–∞—à–∏—Ö –æ–∂–∏–¥–∞–Ω–∏–π.
                    –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –Ω–∞–º —Å—Ç–æ–∏—Ç —É–ª—É—á—à–∏—Ç—å. –í–∞—à–µ –º–Ω–µ–Ω–∏–µ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º —Å—Ç–∞—Ç—å –ª—É—á—à–µ! üôå
                    """);
            currentclient.setStatus(ClientStatus.WAITING_BAD_FEEDBACK);
            currentclient.setServiceMark(Byte.parseByte(String.valueOf(callback.charAt(0))));
            clientService.saveClient(currentclient);
            return message;
        }
        message.setText("–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç)");
        return message;
    }
    private SendMessage sendBadAnswerToConstructor(Client currentclient, SendMessage message,String callback) {
        if (currentclient.getStatus().equals(ClientStatus.WAITING_CONSTRUCTOR_QUALITY)) {
            message.setText("""
                    üôè –°–ø–∞—Å–∏–±–æ –∑–∞ —á–µ—Å—Ç–Ω—ã–π –æ—Ç–∑—ã–≤!
                    –ù–∞–º –æ—á–µ–Ω—å –∂–∞–ª—å, —á—Ç–æ –Ω–∞—à –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –Ω–µ –æ–ø—Ä–∞–≤–¥–∞–ª –≤–∞—à–∏—Ö –æ–∂–∏–¥–∞–Ω–∏–π.
                    –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –Ω–∞–º —Å—Ç–æ–∏—Ç —É–ª—É—á—à–∏—Ç—å. –í–∞—à–µ –º–Ω–µ–Ω–∏–µ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º —Å—Ç–∞—Ç—å –ª—É—á—à–µ!
                    """);
            currentclient.setStatus(ClientStatus.WAITING_BAD_FEEDBACK_CONSTRUCTOR);
            currentclient.setConstructorMark(Byte.parseByte(String.valueOf(callback.charAt(0))));
            clientService.saveClient(currentclient);
            return message;
        }
        message.setText("–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç)");
        return message;
    }
    private SendMessage sendGoodAnswer(Client currentclient, SendMessage message, String callback) {
        currentclient.setServiceMark(Byte.parseByte(String.valueOf(callback.charAt(0))));
        message.setText("""
                üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –≤—ã—Å–æ–∫—É—é –æ—Ü–µ–Ω–∫—É!
                –ú—ã —Ä–∞–¥—ã, —á—Ç–æ —Å–º–æ–≥–ª–∏ –≤–∞–º –ø–æ–º–æ—á—å. –ë—É–¥–µ–º –∏ –¥–∞–ª—å—à–µ —Å—Ç–∞—Ä–∞—Ç—å—Å—è —Ä–∞–¥–æ–≤–∞—Ç—å –≤–∞—Å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–º —Å–µ—Ä–≤–∏—Å–æ–º!
                """);
        message.setReplyMarkup(createInlineKeyboard(List.of(new Pair<>("–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é \uD83D\uDD19","main_menu"))));
        currentclient.setStatus(ClientStatus.SAVED);
        clientService.saveClient(currentclient);
        googleSheetsService.updateTable(clientService.getAllClients());
        return message;
    }

    private SendMessage sendGoodAnswerToConstructor(Client currentclient, SendMessage message,String callback) {
        currentclient.setConstructorMark(Byte.parseByte(String.valueOf(callback.charAt(0))));
        message.setText("""
                üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –≤—ã—Å–æ–∫—É—é –æ—Ü–µ–Ω–∫—É!
                –ú—ã —Ä–∞–¥—ã, —á—Ç–æ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å —Å–æ–∑–¥–∞–≤–∞—Ç—å —á–µ—Ö–æ–ª —Å –Ω–∞–º–∏.
                –ñ–¥–µ–º –≤–∞—Å —Å–Ω–æ–≤–∞ –∑–∞ –Ω–æ–≤—ã–º–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –¥–∏–∑–∞–π–Ω–∞–º–∏!
                """);
        message.setReplyMarkup(createInlineKeyboard(List.of(new Pair<>("–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é \uD83D\uDD19","main_menu"))));
        currentclient.setStatus(ClientStatus.SAVED);
        clientService.saveClient(currentclient);
        googleSheetsService.updateTable(clientService.getAllClients());
        return message;
    }
    private SendMessage sendOrderQuestionProcess(Message update, SendMessage message, Client currentClient) {
        SendMessage order = new SendMessage();
        String question = String.format("–í–æ–ø—Ä–æ—Å –ø–æ –∑–∞–∫–∞–∑—É –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @%s:\n", update.getFrom().getUserName());
        order.setText(question + update.getText());

        //–û–¢–ü–†–ê–í–ò–¢–¨ –ú–ï–ù–ï–î–ñ–ï–†–£
        order.setChatId(managerChatId);
        telegram.executeMessage(order);
        //–û–¢–ü–†–ê–í–ò–¢–¨ –ê–õ–ï–ö–°–ê–ù–î–†–£
        order.setChatId(alexanderChatId);
        telegram.executeMessage(order);

        message.setText("–°–ø–∞—Å–∏–±–æ! –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π.");
        message.setReplyMarkup(createInlineKeyboard(List.of(new Pair<>("–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é \uD83D\uDD19", "main_menu"))));
        currentClient.setStatus(ClientStatus.SAVED);
        clientService.saveClient(currentClient);
        if (!currentClient.getUsedService()) {
            startTimerByServiceSupport(currentClient);
            currentClient.setUsedService(true);
            clientService.saveClient(currentClient);
        }
            return message;

    }




    private SendMessage sendServiceSupportMessage(Client currentClient, SendMessage message) {
        telegram.deleteLastMessage(currentClient.getChatId());
        currentClient.setStatus(ClientStatus.SERVICE_SUPPORT);
        clientService.saveClient(currentClient);
        message.setText("–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –∫ –Ω–∞–º! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É, –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –ø–æ–º–æ—á—å –≤–∞–º –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ!");
        message.setReplyMarkup(createInlineKeyboard(
                List.of(
                        new Pair<>("–Ø –ø–æ–ª—É—á–∏–ª –Ω–µ —Ç–æ—Ç —Ç–æ–≤–∞—Ä –∏–ª–∏ –¥–∏–∑–∞–π–Ω", "wrong_item"),
                        new Pair<>("–¢–æ–≤–∞—Ä –ø–æ–≤—Ä–µ–∂–¥–µ–Ω –∏–ª–∏ –±—Ä–∞–∫–æ–≤–∞–Ω", "damaged_item"),
                        new Pair<>("–ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ –∑–∞–∫–∞–∑—É", "order_questions"),
                        new Pair<>("–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é \uD83D\uDD19","main_menu")
                )
        ));
        return message;
    }

    private SendMessage sendWrongItemInstructions(Client currentClient, SendMessage message) {

        currentClient.setStatus(ClientStatus.WAITING_CONTENT);
            clientService.saveClient(currentClient);
            message.setText("""
                    –ú—ã –æ—á–µ–Ω—å —Å–æ–∂–∞–ª–µ–µ–º, —á—Ç–æ –í—ã –ø–æ–ª—É—á–∏–ª–∏ –Ω–µ —Ç–æ—Ç —Ç–æ–≤–∞—Ä –∏–ª–∏ –¥–∏–∑–∞–π–Ω. –î–∞–≤–∞–π—Ç–µ —Ä–µ—à–∏–º —ç—Ç—É –ø—Ä–æ–±–ª–µ–º—É –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ!

                    –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, <b>–æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–º –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º</b>üëá:
                    1. üì∏ –§–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞. –ù–∞ –Ω–µ–º –¥–æ–ª–∂–Ω–∞ —Ö–æ—Ä–æ—à–æ –±—ã—Ç—å –≤–∏–¥–Ω–∞ —Å—É—Ç—å –ø—Ä–æ–±–ª–µ–º—ã.
                    2. üìù –°–∫—Ä–∏–Ω –∑–∞–∫–∞–∑–∞ –∏–∑ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞.
                    3. ‚úèÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã.
                    üì¶ –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —É–ø–∞–∫–æ–≤–∫—É –∏ —Ç–æ–≤–∞—Ä –≤ —Ç–æ–º –≤–∏–¥–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã –µ–≥–æ –ø–æ–ª—É—á–∏–ª–∏.
                    –ö–∞–∫ —Ç–æ–ª—å–∫–æ –º—ã –ø–æ–ª—É—á–∏–º —ç—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –º—ã –Ω–∞—á–Ω–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–º–µ–Ω—ã –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞.
                    –î–ª—è –æ—Ç–º–µ–Ω—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ "–û—Ç–º–µ–Ω–∞"
                    """);
        message.setParseMode("HTML");
            message.setReplyMarkup(createReplyKeyboard(List.of(new KeyboardRow(List.of(
                    new KeyboardButton(ButtonLabels.CANCEL.getLabel()))))));

        return message;
    }

    private SendMessage sendDamagedItemInstructions(Client currentClient, SendMessage message) {

        currentClient.setStatus(ClientStatus.WAITING_CONTENT);
            clientService.saveClient(currentClient);
            message.setText("""
                    –ú—ã –æ—á–µ–Ω—å —Å–æ–∂–∞–ª–µ–µ–º, —á—Ç–æ –í—ã –ø–æ–ª—É—á–∏–ª–∏ –±—Ä–∞–∫–æ–≤–∞–Ω–Ω—ã–π –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä. –î–∞–≤–∞–π—Ç–µ —Ä–µ—à–∏–º —ç—Ç—É –ø—Ä–æ–±–ª–µ–º—É –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ!

                    –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, <b>–æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–º –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º</b>üëá:
                    1. üì∏ –§–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞. –ù–∞ –Ω–µ–º –¥–æ–ª–∂–Ω–∞ —Ö–æ—Ä–æ—à–æ –±—ã—Ç—å –≤–∏–¥–Ω–∞ —Å—É—Ç—å –ø—Ä–æ–±–ª–µ–º—ã.
                    2. üìù –°–∫—Ä–∏–Ω –∑–∞–∫–∞–∑–∞ –∏–∑ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞.
                    3. ‚úèÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã.
                    üì¶ –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —É–ø–∞–∫–æ–≤–∫—É –∏ —Ç–æ–≤–∞—Ä –≤ —Ç–æ–º –≤–∏–¥–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã –µ–≥–æ –ø–æ–ª—É—á–∏–ª–∏.
                    –ö–∞–∫ —Ç–æ–ª—å–∫–æ –º—ã –ø–æ–ª—É—á–∏–º —ç—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –º—ã –Ω–∞—á–Ω–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–º–µ–Ω—ã –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞.
                    –î–ª—è –æ—Ç–º–µ–Ω—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ "–û—Ç–º–µ–Ω–∞"
                    """);
        message.setParseMode("HTML");
            message.setReplyMarkup(createReplyKeyboard(List.of(new KeyboardRow(List.of(
                    new KeyboardButton(ButtonLabels.CANCEL.getLabel()))))));

        return message;
    }

    private SendMessage sendOrderQuestionsMessage(Client currentClient, SendMessage message) {
        message.setText("–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –∫ –Ω–∞–º! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å:");
        message.setReplyMarkup(createReplyKeyboard(List.of(new KeyboardRow(List.of(new KeyboardButton(ButtonLabels.CANCEL_ORDER_QUESTION.getLabel()))))));
        currentClient.setStatus(ClientStatus.ORDER_QUESTION);
        clientService.saveClient(currentClient);
        return message;
    }

    private SendMessage sendCreateCaseMessage(Client currentClient, SendMessage message) {
        telegram.deleteLastMessage(currentClient.getChatId());
        message.setText("""
                –ú—ã —Ä–∞–¥—ã, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å —á—Ç–æ-—Ç–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ! –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –∏ –≤—ã –ø–µ—Ä–µ–π–¥–µ—Ç–µ –Ω–∞ –Ω–∞—à —Å–∞–π—Ç, –≥–¥–µ —Å–º–æ–∂–µ—Ç–µ:
                - –í—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å —Ç–µ–ª–µ—Ñ–æ–Ω–∞.
                - –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–≤–æ–π –¥–∏–∑–∞–π–Ω –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –∏–∑ –≥–æ—Ç–æ–≤—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.
                - –î–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ –ª–æ–≥–æ—Ç–∏–ø—ã.
                - –£–≤–∏–¥–µ—Ç—å –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.
                –≠—Ç–æ –ø—Ä–æ—Å—Ç–æ, –±—ã—Å—Ç—Ä–æ –∏ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ!
                üëá –ù–∞–∂–º–∏—Ç–µ –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:
                [–°–æ–∑–¥–∞—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π —á–µ—Ö–æ–ª](https://musthavecase.ru/product/cases/konstruktor-chehla)
                
                P.S. –°–æ–∑–¥–∞—Ç—å –º–æ–∂–Ω–æ –Ω–µ —Ç–æ–ª—å–∫–æ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π —á–µ—Ö–æ–ª, –∞ –µ—â–µ –∏ –æ–±–ª–æ–∂–∫—É –Ω–∞ –ø–∞—Å–ø–æ—Ä—Ç, —Ñ—É—Ç–±–æ–ª–∫—É, power bank –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ)
                –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º ‚Äî –º—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å! üòä
                """);
        message.setParseMode("Markdown");
        message.setReplyMarkup(createReplyKeyboard(List.of(new KeyboardRow(List.of(new KeyboardButton(ButtonLabels.MAIN_MENU.getLabel()))))));
        if(!currentClient.getUsedConstructor()){
            startTimerByCaseConstructor(currentClient);
            currentClient.setUsedConstructor(true);
        }
        currentClient.setStatus(ClientStatus.SAVED);
        clientService.saveClient(currentClient);
        return message;
    }

    private SendMessage sendJoinGroupMessage(Client currentClient, SendMessage message) {
        Long chatId = currentClient.getChatId();
        telegram.deleteLastMessage(chatId);
        currentClient.setStatus(ClientStatus.SAVED);
        clientService.saveClient(currentClient);
        message.setChatId(chatId.toString());
        message.setText("""
                üéâ –û—Ç–ª–∏—á–Ω–æ! üéâ
                –°–ø–∞—Å–∏–±–æ, —á—Ç–æ —Ä–µ—à–∏–ª–∏ –≤—Å—Ç—É–ø–∏—Ç—å –≤ –Ω–∞—à—É –≥—Ä—É–ø–ø—É! –ú—ã —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å—Ä–µ–¥–∏ –Ω–∞—à–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.
                
                üëâ –ß—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å, –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: https://t.me/MustHaveCase –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è".
                
                –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É –¥—Ä—É–∂–Ω—É—é –∫–æ–º–∞–Ω–¥—É! üöÄ
                """);
        message.setParseMode("Markdown");
        message.setReplyMarkup(createReplyKeyboard(List.of(new KeyboardRow(List.of(new KeyboardButton(ButtonLabels.MAIN_MENU.getLabel()))))));
        return message;
    }

    private SendMessage sendPromotionsMessage(Client currentClient, SendMessage message) {
        Long chatId = currentClient.getChatId();
        telegram.deleteLastMessage(chatId);
        currentClient.setStatus(ClientStatus.SAVED);
        clientService.saveClient(currentClient);
        message.setChatId(chatId);
        message.setText("""
                –ü—Ä–∏–≤–µ—Ç! üåü
                –†–∞–¥—ã, —á—Ç–æ –≤—ã –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç–µ—Å—å –Ω–∞—à–∏–º–∏ –∞–∫—Ü–∏—è–º–∏ –∏ —Å–∫–∏–¥–∫–∞–º–∏! –í–æ—Ç, —á—Ç–æ —É –Ω–∞—Å —Å–µ–π—á–∞—Å –µ—Å—Ç—å:
                
                üéâ –¢–µ–∫—É—â–∏–µ –∞–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏:
                
                1Ô∏è‚É£ –°–∫–∏–¥–∫–∞ 15% –ø—Ä–æ –ø—Ä–æ–º–æ–∫–æ–¥—É –Ω–∞ –∑–∞–∫–∞–∑ —á–µ—Ä–µ–∑ —Å–∞–π—Ç –ø—Ä–∏ –ø–æ–¥–ø–∏—Å–∫–µ –Ω–∞ –Ω–∞—à –¢–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª
                   - –ü–µ—Ä–∏–æ–¥ –¥–µ–π—Å—Ç–≤–∏—è: –¥–æ 31 –º–∞—è 2025 –≥–æ–¥–∞.
                
                2Ô∏è‚É£ –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –æ—Ç 5000 —Ä—É–±–ª–µ–π
                   - –ê–∫—Ü–∏—è –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–ª—è –≤—Å–µ—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤ –†–æ—Å—Å–∏–∏.
                
                3Ô∏è‚É£ –ö—ç—à–±–µ–∫ 10% –∑–∞ —Ñ–æ—Ç–æ —Å –æ—Ç–º–µ—Ç–∫–æ–π –≤ –ò–Ω—Å—Ç–∞–≥—Ä–∞–º
                
                üëâ –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ, [–ø–æ—Å–µ—Ç–∏—Ç–µ –Ω–∞—à —Å–∞–π—Ç](https://musthavecase.ru)
                """);
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();
        InlineKeyboardButton telegram_but = new InlineKeyboardButton();
        telegram_but.setText("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –¢–µ–ª–µ–≥—Ä–∞–º–º");
        telegram_but.setUrl("https://t.me/MustHaveCase");
        InlineKeyboardButton wibes_but = new InlineKeyboardButton();
        wibes_but.setText("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ Wibes");
        wibes_but.setUrl("https://wibes.ru/author/90347");
        InlineKeyboardButton vk_but = new InlineKeyboardButton();
        vk_but.setText("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –í–∫–æ–Ω—Ç–∞–∫—Ç–µ");
        vk_but.setUrl("https://vk.com/musthavecase_ru");
        InlineKeyboardButton instagram_but = new InlineKeyboardButton();
        instagram_but.setText("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ò–Ω—Å—Ç–∞–≥—Ä–∞–º–º");
        instagram_but.setUrl("https://www.instagram.com/musthavecase.ru?igsh=dmE2OTNvdzV5dTVh");
        InlineKeyboardButton get_promo_but = new InlineKeyboardButton();
        get_promo_but.setText("\uD83D\uDCB0–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥\uD83D\uDCB0");
        get_promo_but.setCallbackData("promocode");
        InlineKeyboardButton main_menu = new InlineKeyboardButton();
        main_menu.setText("–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é \uD83D\uDD19");
        main_menu.setCallbackData("main_menu");
        keyboard.add(List.of(telegram_but));
        keyboard.add(List.of(wibes_but));
        keyboard.add(List.of(vk_but));
        keyboard.add(List.of(instagram_but));
        keyboard.add(List.of(get_promo_but));
        keyboard.add(List.of(main_menu));
        InlineKeyboardMarkup keyboardMarkup = new InlineKeyboardMarkup();
        keyboardMarkup.setKeyboard(keyboard);
        message.setReplyMarkup(keyboardMarkup);
        message.enableMarkdown(true);
        return message;
    }

    private SendMessage sendPromocode(SendMessage message, Long userId) {

        if (isUserSubscribed(userId, "@MustHaveCase")) {
            message.setText(String.format("–í–∞—à –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ —Å–∫–∏–¥–∫—É 15%%\uD83D\uDD25 - <b>%s</b>", promo));
            message.setParseMode("HTML");

        } else {
            message.setText("–î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –¢–µ–ª–µ–≥–∞–º–º –∫–∞–Ω–∞–ª ‚ò∫\uFE0F");
            InlineKeyboardButton telegram_but = new InlineKeyboardButton();
            telegram_but.setText("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –¢–µ–ª–µ–≥—Ä–∞–º–º");
            telegram_but.setUrl("https://t.me/MustHaveCase");
            InlineKeyboardButton get_promo_but = new InlineKeyboardButton();
            get_promo_but.setText("\uD83D\uDCB0–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥\uD83D\uDCB0");
            get_promo_but.setCallbackData("promocode");
            InlineKeyboardMarkup keyboardMarkup = new InlineKeyboardMarkup();
            keyboardMarkup.setKeyboard(List.of(List.of(telegram_but), List.of(get_promo_but)));
            message.setReplyMarkup(keyboardMarkup);
            message.enableMarkdown(true);
        }

        return message;
    }


    public boolean isUserSubscribed(Long userId, String chatId) {
        GetChatMember getChatMember = new GetChatMember();
        getChatMember.setChatId(chatId);
        getChatMember.setUserId(userId);
        ChatMember chatMember = telegram.executeMessage(getChatMember);
        return chatMember.getStatus().equals("member") ||
                chatMember.getStatus().equals("administrator") ||
                chatMember.getStatus().equals("creator");

    }

    private SendMessage sendHelpCooperationMessage(Client currentClient, SendMessage message) {
        Long chatId = currentClient.getChatId();
        telegram.deleteLastMessage(chatId);
        currentClient.setStatus(ClientStatus.SAVED);
        clientService.saveClient(currentClient);
        message.setChatId(chatId);
        message.setText("""
                –ü—Ä–∏–≤–µ—Ç! üåü
                –ú—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –Ω–æ–≤—ã–º –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–∞–º! –í–æ—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –º—ã —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞–µ–º:
                
                1Ô∏è‚É£ [–î–ª—è –±–ª–æ–≥–µ—Ä–æ–≤ –∏ –∏–Ω—Ñ–ª—é—ç–Ω—Å–µ—Ä–æ–≤](https://musthavecase.ru/cooperation/)
                   - –£—Å–ª–æ–≤–∏—è –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏—Ö –ø—Ä–æ–≥—Ä–∞–º–º, —Ä–µ–∫–ª–∞–º–Ω—ã–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.
                
                2Ô∏è‚É£ [–î–ª—è –¥–∏–∑–∞–π–Ω–µ—Ä–æ–≤ –∏ –∏–ª–ª—é—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤](https://musthavecase.ru/cooperation/)
                   - –ö–æ–ª–ª–∞–±–æ—Ä–∞—Ü–∏–∏, —Å–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏ —É—á–∞—Å—Ç–∏–µ –≤ –ø—Ä–æ–µ–∫—Ç–∞—Ö.
                
                3Ô∏è‚É£ [–î–ª—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤](https://musthavecase.ru/cooperation/)
                   - –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –±–∏–∑–Ω–µ—Å–∞, –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏ –∏ —Å–ø–µ—Ü–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.
                
                4Ô∏è‚É£ [–î–ª—è –æ–ø—Ç–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤](https://musthavecase.ru/cooperation/)
                   - –í—ã–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –∑–∞–∫—É–ø–æ–∫, —Å–∫–∏–¥–∫–∏ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä.
               
                5Ô∏è‚É£ [–î–ª—è —Ä–æ–∑–Ω–∏—á–Ω—ã—Ö –∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–æ–≤](https://musthavecase.ru/cooperation/)
                   - –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã, –¥—Ä–æ–ø—à–∏–ø–ø–∏–Ω–≥ –∏ —Å–æ–≤–º–µ—Å—Ç–Ω—ã–µ –∞–∫—Ü–∏–∏.
                
                üëâ –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ä–∞–∑–¥–µ–ª –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ, –µ—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã. –ú—ã —Å —Ä–∞–¥–æ—Å—Ç—å—é –æ–±—Å—É–¥–∏–º –¥–µ—Ç–∞–ª–∏!
                """);
        message.enableMarkdown(true);
        message.setReplyMarkup(createReplyKeyboard(List.of(new KeyboardRow(List.of(new KeyboardButton(ButtonLabels.MAIN_MENU.getLabel()))))));
        return message;
    }

    private static ReplyKeyboardMarkup createReplyKeyboard(List<KeyboardRow> list) {
        ArrayList<KeyboardRow> keyboard = new ArrayList<>(list);
        ReplyKeyboardMarkup replyKeyboardMarkup = new ReplyKeyboardMarkup();
        replyKeyboardMarkup.setKeyboard(keyboard);
        replyKeyboardMarkup.setSelective(true);
        replyKeyboardMarkup.setResizeKeyboard(true);
        replyKeyboardMarkup.setOneTimeKeyboard(false);
        return replyKeyboardMarkup;
    }

    InlineKeyboardMarkup createInlineKeyboard(List<Pair<String, String>> buttons) {
        InlineKeyboardMarkup keyboardMarkup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();

        for (Pair<String, String> button : buttons) {
            InlineKeyboardButton inlineKeyboardButton = new InlineKeyboardButton();
            inlineKeyboardButton.setText(button.first());
            inlineKeyboardButton.setCallbackData(button.second());
            keyboard.add(List.of(inlineKeyboardButton));
        }

        keyboardMarkup.setKeyboard(keyboard);
        return keyboardMarkup;
    }



}
